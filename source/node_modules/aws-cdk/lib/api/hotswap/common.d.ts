import * as cfn_diff from '@aws-cdk/cloudformation-diff';
import { CloudFormation } from 'aws-sdk';
import { ISDK } from '../aws-auth';
import { EvaluateCloudFormationTemplate } from './evaluate-cloudformation-template';
export interface ListStackResources {
    listStackResources(): Promise<CloudFormation.StackResourceSummary[]>;
}
/**
 * An interface that represents a change that can be deployed in a short-circuit manner.
 */
export interface HotswapOperation {
    apply(sdk: ISDK): Promise<any>;
}
/**
 * An enum that represents the result of detection whether a given change can be hotswapped.
 */
export declare enum ChangeHotswapImpact {
    /**
     * This result means that the given change cannot be hotswapped,
     * and requires a full deployment.
     */
    REQUIRES_FULL_DEPLOYMENT = "requires-full-deployment",
    /**
     * This result means that the given change can be safely be ignored when determining
     * whether the given Stack can be hotswapped or not
     * (for example, it's a change to the CDKMetadata resource).
     */
    IRRELEVANT = "irrelevant"
}
export declare type ChangeHotswapResult = HotswapOperation | ChangeHotswapImpact;
/**
 * Represents a change that can be hotswapped.
 */
export declare class HotswappableChangeCandidate {
    /**
     * The value the resource is being updated to.
     */
    readonly newValue: cfn_diff.Resource;
    /**
     * The changes made to the resource properties.
     */
    readonly propertyUpdates: {
        [key: string]: cfn_diff.PropertyDifference<any>;
    };
    constructor(newValue: cfn_diff.Resource, propertyUpdates: {
        [key: string]: cfn_diff.PropertyDifference<any>;
    });
}
export declare function establishResourcePhysicalName(logicalId: string, physicalNameInCfnTemplate: any, evaluateCfnTemplate: EvaluateCloudFormationTemplate): Promise<string | undefined>;
export declare function assetMetadataChanged(change: HotswappableChangeCandidate): boolean;
